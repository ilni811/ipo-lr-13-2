from package import ImageHandler # импортируем класс ImageHandler для работы с изображениями
from package import ImageProcessor # импортируем класс ImageProcessor для обработки изображений

images = [] # список для хранения загруженных изображений
status = True
def print_menu():
    print("------------------------------------------------------------------------------")
    print("----------------------------------Меню----------------------------------------") 
    print("-----1. Загрузить изображение-------------------------------------------------") 
    print("-----2. Сохранить изображение-------------------------------------------------") 
    print("-----3. Изменить размерность изображения (300x300)----------------------------") 
    print("-----4. Применить фильтр размытия к изображению (Blur)------------------------") 
    print("-----5. Добавить текст в нижний правый угол изображения-----------------------") 
    print("-----6. Посмотреть список загруженных изображений-----------------------------") 
    print("-----7. Посмотреть изображение из списка загруженных изображений--------------") 
    print("-----8. Завершить программу---------------------------------------------------") 
    print("------------------------------------------------------------------------------")

def print_images(): # функция для отображения списка загруженных изображений
    print("------------------------------------------------------------------------------")
    print()
    if not images: # проверяем, пуст ли список изображений
        print("Список изображений пуст.")
        return
    for index, image in enumerate(images, start=1): # перебираем изображения с индексом, начиная с 1
        print(f"{index}. {image.filename}") # выводим индекс и имя файла изображения
    print() 
    print("------------------------------------------------------------------------------")

def get_image_index(prompt): # функция для получения индекса изображения от пользователя
    while True:
        try:
            index = int(input(prompt)) - 1 # преобразуем ввод в индекс (уменьшаем на 1 для соответствия списку)
            if index < 0 or index >= len(images): # проверяем, находится ли индекс в допустимом диапазоне
                raise IndexError("Индекс вне диапазона.")
            return index
        except ValueError:
            print("Введенное значение должно быть числом.")
        except IndexError:
            print("Некорректный номер изображения. Пожалуйста, выберите существующее изображение.")

while status:
    print_menu()
    input_data = input("Выберите номер желаемой операции: ")
    
    while True:
        try: 
            input_data = int(input_data)
            if input_data < 1 or input_data > 8:
                raise ValueError("Некорректный ввод, пожалуйста выберите число от 1 до 8.")
            break
        except ValueError as e: 
            print(f"Введенное вами значение должно быть целым числом. Пожалуйста, попробуйте снова.")
            input_data = input("Выберите номер желаемой операции: ")

    if input_data == 1: # если выбрана опция 1 (загрузка изображения)
        while True:
            image_path = input("Введите путь изображения, которое Вы хотели бы загрузить в память: ")
            try: 
                image_handler = ImageHandler(image_path) # создаем экземпляр ImageHandler с указанным путем
                image_handler.load_image() # загружаем изображение
                images.append(image_handler) # добавляем загруженное изображение в список
                print("Изображение успешно добавлено.")
                break
            except FileNotFoundError: 
                print("Файл не найден. Пожалуйста, проверьте корректность введенных данных.")
            except Exception as e:
                print(f"Ошибка при загрузке изображения: {e}. Пожалуйста, попробуйте снова.")

    elif input_data == 2: # если выбрана опция 2 (сохранение изображения)
        print_images()
        index = get_image_index("Выберите изображение, которое хотите сохранить: ")
        
        while True:
            name = input("Введите название сохраняемого изображения (с расширением, например, 'image.png'): ")
            if not name.strip():
                print("Имя файла не может быть пустым. Пожалуйста, введите корректное имя.")
                continue
            if not name.lower().endswith(('.png', '.jpg', '.jpeg')): # проверка на корректное расширение
                print("Имя файла должно заканчиваться на .png, .jpg или .jpeg. Пожалуйста, попробуйте снова.")
                continue
            break

        try: 
            images[index].save_image(name) # сохраняем изображение с указанным именем
            print("Изображение успешно сохранено.")
        except FileNotFoundError:
            print("Не удалось найти изображение. Пожалуйста, проверьте корректность введенных данных.")
        except Exception as e:
            print(f"Ошибка при сохранении изображения: {e}. Пожалуйста, попробуйте снова.")

    elif input_data == 3: # если выбрана опция 3 (изменение размерности изображения)
        print_images()
        index = get_image_index("Выберите изображение, размер которого Вы бы хотели изменить (300x300): ")
        try: 
            images[index].resize_image((300, 300)) # изменяем размер изображения на 300x300
            print("Размерность изображения была успешно изменена.")
        except FileNotFoundError:
            print("Файл не найден. Пожалуйста, проверьте корректность введенных данных.")
        except Exception as e:
            print(f"Ошибка при изменении размера изображения: {e}. Пожалуйста, попробуйте снова.")

    elif input_data == 4: # Если выбрана опция 4 (применение фильтра размытия)
        print_images()
        index = get_image_index("Выберите изображение, к которому Вы бы хотели применить фильтр размытия: ")
        try: 
            processor = ImageProcessor(images[index].image) # создаем экземпляр ImageProcessor с загруженным изображением
            processor.apply_filter('BLUR') # применяем фильтр размытия
            images[index].image = processor.image # обновляем изображение в списке
            print("Фильтр размытия был применен к изображению.")
        except FileNotFoundError:
            print("Файл не найден. Пожалуйста, проверьте корректность введенных данных.")
        except Exception as e:
            print(f"Ошибка при применении фильтра: {e}. Пожалуйста, попробуйте снова.")

    elif input_data == 5: # если выбрана опция 5 (добавление текста на изображение)
        print_images()
        index = get_image_index("Выберите изображение, в нижний правый угол которого Вы бы хотели добавить текст: ")
        text = input("Введите текст для добавления: ")
        try: 
            processor = ImageProcessor(images[index].image) # создаем экземпляр ImageProcessor с загруженным изображением
            processor.add_text(text) # добавляем текст на изображение
            images[index].image = processor.image # обновляем изображение в списке
            print("Введенный вами текст был добавлен в нижний правый угол изображения.")
        except FileNotFoundError: 
            print("Текст не был добавлен. Пожалуйста, проверьте корректность введенных данных.")
        except Exception as e:
            print(f"Ошибка при добавлении текста: {e}. Пожалуйста, попробуйте снова.")

    elif input_data == 6: # если выбрана опция 6 (просмотр списка загруженных изображений)
        print("-------------------------------------------------------------------------------") 
        print("----------------------Список загруженных изображений: -------------------------") 
        print_images() # выводим список загруженных изображений
        print("-------------------------------------------------------------------------------") 

    elif input_data == 7: # если выбрана опция 7 (просмотр изображения из списка)
        print_images()
        index = get_image_index("Выберите изображение, которое Вы хотите посмотреть: ")
        try: 
            images[index].image.show() # открываем изображение с помощью метода show()
            print("Изображение открыто.")
        except FileNotFoundError:
            print("Файл не найден. Пожалуйста, проверьте корректность введенных данных.")
        except Exception as e:
            print(f"Ошибка при открытии изображения: {e}. Пожалуйста, попробуйте снова.")

    elif input_data == 8: # если выбрана опция 8 (завершение программы)
        print("-------------------------------------------------------------------------------")
        print("---------------------Завершение выполнения программы---------------------------") 
        print("-------------------------------------------------------------------------------")  
        status = False